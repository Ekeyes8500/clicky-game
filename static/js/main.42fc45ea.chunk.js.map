{"version":3,"sources":["images sync nonrecursive /.(png)$","images/ackbar.png","images/boba.png","images/chewbacca.png","images/hansolo.png","images/leia.png","images/luke.png","images/obiwan.png","images/palpatine.png","images/r2d2.png","images/tarkin.png","images/vader.png","images/yoda.png","components/Navbar/Navbar.js","components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["map","./ackbar.png","./boba.png","./chewbacca.png","./hansolo.png","./leia.png","./luke.png","./obiwan.png","./palpatine.png","./r2d2.png","./tarkin.png","./vader.png","./yoda.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","props","react_default","a","createElement","className","instructions","score","topScore","Card","role","alt","src","image","onClick","scoreCheck","name","pickedArray","r","imageImport","require","Array","prototype","shuffle","i","this","length","randomIndex","Math","floor","random","itemAtIndex","App","state","images","console","log","_this","setState","push","_this2","components_Navbar_Navbar","components_Card_Card","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42fc45ea.chunk.js","sourcesContent":["var map = {\n\t\"./ackbar.png\": 21,\n\t\"./boba.png\": 22,\n\t\"./chewbacca.png\": 23,\n\t\"./hansolo.png\": 24,\n\t\"./leia.png\": 25,\n\t\"./luke.png\": 26,\n\t\"./obiwan.png\": 27,\n\t\"./palpatine.png\": 28,\n\t\"./r2d2.png\": 29,\n\t\"./tarkin.png\": 30,\n\t\"./vader.png\": 31,\n\t\"./yoda.png\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/ackbar.dd2dc3e0.png\";","module.exports = __webpack_public_path__ + \"static/media/boba.d1536a07.png\";","module.exports = __webpack_public_path__ + \"static/media/chewbacca.533a7b9d.png\";","module.exports = __webpack_public_path__ + \"static/media/hansolo.b5345105.png\";","module.exports = __webpack_public_path__ + \"static/media/leia.43588a43.png\";","module.exports = __webpack_public_path__ + \"static/media/luke.884455e9.png\";","module.exports = __webpack_public_path__ + \"static/media/obiwan.a3651dd2.png\";","module.exports = __webpack_public_path__ + \"static/media/palpatine.220ef5c6.png\";","module.exports = __webpack_public_path__ + \"static/media/r2d2.b0de18ba.png\";","module.exports = __webpack_public_path__ + \"static/media/tarkin.6df84358.png\";","module.exports = __webpack_public_path__ + \"static/media/vader.1bfddd65.png\";","module.exports = __webpack_public_path__ + \"static/media/yoda.c40e0e19.png\";","import React from \"react\";\r\n\r\n\r\nconst Navbar = props => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <h1 className=\"navbar-brand\">The Clicky Game!</h1>\r\n        <h3 className=\"mx-auto\">{props.instructions}</h3>\r\n        <h4 className=\"ml-auto mr-3\">Current Score: {props.score} | Top Score: {props.topScore}</h4>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport \"./Card.css\"\r\n\r\nconst Card = props => (\r\n    <div role=\"img\" className=\"card mr-2 mt-2\">\r\n        <img className=\"card-img-top character\" alt=\"character\" src={props.image} onClick={()=> props.scoreCheck(props.name)}/>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\"\nimport Card from \"./components/Card\"\nimport './App.css';\n\nlet pickedArray = [];\nlet score = 0;\nlet topScore = 0;\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nconst imageImport = importAll(require.context('./images', false, /\\.(png)$/));\n\nArray.prototype.shuffle = function() {\n  var input = this;\n   \n  for (var i = input.length-1; i >=0; i--) {\n   \n      var randomIndex = Math.floor(Math.random()*(i+1)); \n      var itemAtIndex = input[randomIndex]; \n       \n      input[randomIndex] = input[i]; \n      input[i] = itemAtIndex;\n  }\n  return input;\n}\n\n\nclass App extends Component {\n  state = {\n    images:[],\n    score:0,\n    topScore:0,\n    instructions:\"Select a character to begin!\"\n  }\n\n  scoreCheck = (name) => {\n    for (let i = 0; i < pickedArray.length; i++){\n      if (pickedArray[i] === name){\n        console.log(\"Failed!\")\n        pickedArray = [];\n        score = 0;\n        imageImport.shuffle();\n        this.setState({\n          images:imageImport,\n          score:0,\n          instructions:\"Incorrect, restarting game!\"\n        })\n        return\n      }\n    }\n    pickedArray.push(name);\n    imageImport.shuffle();\n    score++;\n    if (score > topScore){\n      topScore++;\n      this.setState({topScore:topScore})\n    }\n    this.setState({\n      images:imageImport,\n      score:score,\n      instructions:\"Correct!\"\n    })\n  }\n\n\n  componentDidMount(){\n    imageImport.shuffle();\n    this.setState({images:imageImport})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Navbar\n          instructions={this.state.instructions}\n          score={this.state.score}\n          topScore={this.state.topScore}\n          />\n          <div className=\"container\">\n            <div className=\"card-columns\">\n              {this.state.images.map(image=>(\n                <Card\n                  key={image}\n                  image={image}\n                  name={image}\n                  scoreCheck={this.scoreCheck}\n                />\n              ))}\n\n            </div>\n\n          </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}